$date
	Mon Feb 24 01:51:23 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module instruction_memory_pc_tb $end
$var wire 24 ! Instr [23:0] $end
$var reg 1 " CLK $end
$var reg 1 # PCsrc $end
$var reg 8 $ immediate [7:0] $end
$var reg 1 % reset $end
$scope module uut $end
$var wire 1 " CLK $end
$var wire 1 # PCsrc $end
$var wire 8 & immediate [7:0] $end
$var wire 1 % reset $end
$var wire 8 ' PC [7:0] $end
$var wire 24 ( Instr [23:0] $end
$scope module u_instruction_memory $end
$var wire 24 ) Instr [23:0] $end
$var wire 8 * PC [7:0] $end
$upscope $end
$scope module u_pc $end
$var wire 1 " CLK $end
$var wire 1 # PCsrc $end
$var wire 8 + immediate [7:0] $end
$var wire 1 % reset $end
$var reg 8 , PC [7:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 - i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 . i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 .
b0 -
b0 ,
b0 +
b0 *
b11000010000000000000001 )
b11000010000000000000001 (
b0 '
b0 &
1%
b0 $
0#
0"
b11000010000000000000001 !
$end
#5000
1"
#10000
0"
0%
#15000
b11000100000000000100000 !
b11000100000000000100000 (
b11000100000000000100000 )
b1 '
b1 *
b1 ,
1"
#20000
0"
b1 -
#25000
b11011110000000000000000 !
b11011110000000000000000 (
b11011110000000000000000 )
b10 '
b10 *
b10 ,
1"
#30000
0"
b10 -
#35000
b11100000001001000000111 !
b11100000001001000000111 (
b11100000001001000000111 )
b11 '
b11 *
b11 ,
1"
#40000
0"
b11 -
#45000
b1000010001000100000000 !
b1000010001000100000000 (
b1000010001000100000000 )
b100 '
b100 *
b100 ,
1"
#50000
0"
b100 -
#55000
b11011111111000000000001 !
b11011111111000000000001 (
b11011111111000000000001 )
b101 '
b101 *
b101 ,
1"
#60000
0"
b101 -
#65000
b11100000000000000000011 !
b11100000000000000000011 (
b11100000000000000000011 )
b110 '
b110 *
b110 ,
1"
#70000
0"
b110 -
#75000
b11100000000000000000111 !
b11100000000000000000111 (
b11100000000000000000111 )
b111 '
b111 *
b111 ,
1"
#80000
0"
b111 -
#85000
bx !
bx (
bx )
b1000 '
b1000 *
b1000 ,
1"
#90000
0"
b1000 -
#95000
b1001 '
b1001 *
b1001 ,
1"
#100000
0"
1#
#105000
b11000010000000000000001 !
b11000010000000000000001 (
b11000010000000000000001 )
b0 '
b0 *
b0 ,
1"
#110000
0"
b1 .
#115000
1"
#120000
0"
b10 $
b10 &
b10 +
#125000
b11011110000000000000000 !
b11011110000000000000000 (
b11011110000000000000000 )
b10 '
b10 *
b10 ,
1"
#130000
0"
b10 .
#135000
1"
#140000
0"
b100 $
b100 &
b100 +
#145000
b1000010001000100000000 !
b1000010001000100000000 (
b1000010001000100000000 )
b100 '
b100 *
b100 ,
1"
#150000
0"
b11 .
#155000
1"
#160000
0"
b110 $
b110 &
b110 +
#165000
b11100000000000000000011 !
b11100000000000000000011 (
b11100000000000000000011 )
b110 '
b110 *
b110 ,
1"
#170000
0"
b100 .
